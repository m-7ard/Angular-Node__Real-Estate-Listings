// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var test2 = Test2.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Test2
    {
        /// <summary>
        /// The person's age in years
        /// </summary>
        [JsonProperty("age")]
        public long Age { get; set; }

        /// <summary>
        /// The person's email address
        /// </summary>
        [JsonProperty("email", NullValueHandling = NullValueHandling.Ignore)]
        public string Email { get; set; }

        /// <summary>
        /// Indicates if the person is employed
        /// </summary>
        [JsonProperty("isEmployed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsEmployed { get; set; }

        /// <summary>
        /// The person's full name
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class Test2
    {
        public static Test2 FromJson(string json) => JsonConvert.DeserializeObject<Test2>(json, QuickType.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Test2 self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
